---
http_interactions:
- request:
    method: get
    uri: https://discuss.rubyonrails.org/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 29 Mar 2024 11:36:30 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept
      - Accept-Encoding
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - '0'
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      X-Discourse-Route:
      - list/latest
      Cross-Origin-Opener-Policy:
      - same-origin-allow-popups
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - upgrade-insecure-requests; base-uri 'self'; object-src 'none'; script-src
        'nonce-5iDWmR33sShTl3q25KjUbPmM4' 'strict-dynamic'; frame-ancestors 'self';
        manifest-src 'self'
      X-Discourse-Cached:
      - skip
      X-Request-Id:
      - f5d3cb07-e2d0-421c-baea-64defd2c366f
      X-Discourse-Trackview:
      - '1'
      Cdck-Proxy-Id:
      - app-balancer-tieinterceptor1b.sea2
      - app-router-tiehunter01.sea2
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 29 Mar 2024 11:36:31 GMT
recorded_with: VCR 6.2.0
